const getMemoryItemHTML=e=>{const t=new Date(e.addDate).toLocaleString().replace(",",""),o=new Date(e.lastOpenDate).toLocaleString().replace(",",""),s=e.id.split("_")[0].split(".")[0],n=e.note||"",a=e.id,i=new Set(e.tags),r=getTagsHTMLOptions(a);let l=`\n    <small class="memory-item-faded">\n    <span class="memory-item-code-link">${e.codeLink||""}</span>\n    </small>\n    `,d='<div class="memory-note-div memory-item-faded"></div>';return e.note&&(d=`\n        <div class="memory-note-div memory-item-faded">\n            <span class="note-content-header">Note:</span>\n            <span class="note-content">${n}</span>\n        </div>\n        `),`\n    <div class="memory-item-container" tabindex="0" id="memory-item-container--${a}">\n\n        <h4 class="memory-item-title" title="Added ${t}&#13;&#10;Last open ${o}">\n            ${e.title}\n        </h4>\n        <div class="memory-item-tags-div">\n            <small class="tag-list">\n                ${Array.from(i).map(e=>`<span class="memory-tag">${e}</span>`).join("")}\n            </small>\n            <div class="edit-tags">\n                <div style="display:flex; align-items: center"; justify-content: space-between">\n                    <select class="memory-item-tags" multiple="multiple">\n                        ${r}\n                    </select>\n                </div>\n            </div>\n        </div>\n        <small class="authors">${e.author}</small>\n        \n        <div class="code-and-note">\n            ${l}\n            ${d}\n        </div>\n\n        <div class="memory-item-actions">\n\n            <div style="display: flex; align-items: center">\n                <div class="memory-item-edit memory-item-svg-div" title="Edit paper details&#13;&#10;(or press 'e' when this paper is focused,&#13;&#10; i.e. when you navigated to it with 'tab')">\n                    <svg >\n                        <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-writing" />\n                    </svg>\n                </div>\n                \n                <small class="memory-item-faded">\n                        ${s}\n                </small>\n                        \n            </div>\n\n            <div class="memory-item-link memory-item-svg-div"  title="Open ${e.pdfLink}" >\n                <svg >\n                   <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-external-link" />\n                </svg>\n            </div>\n                \n            <div class="memory-item-copy-link memory-item-svg-div" title="Copy pdf link" >\n                <svg >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-link" />\n                </svg>\n            </div>\n\n            <div class="memory-item-md memory-item-svg-div" title="Copy Markdown-formatted link" >\n                <svg >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-clipboard-list" />\n                </svg>\n            </div>\n\n            <div class="memory-item-bibtext memory-item-svg-div" title="Copy Bibtex citation" >\n                <svg >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-archive" />\n                </svg>\n            </div>\n\n            <span style="color: green; display: none" class="memory-item-feedback"></span>\n            \n            <div title="Number of times you have loaded&#13;&#10;the paper's Page or PDF"  class="memory-item-faded">\n                Visits: ${e.count}\n            </div>\n\n        </div>\n\n        <div class="extended-item" style="display: none">\n            <div class="item-note">\n                <form class="form-note">\n                    <div class="textarea-wrapper">\n                        <span class="label">Code:</span>\n                        <input type="text" class="form-code-input" value="${e.codeLink||""}">\n                    </div>\n                    <div class="textarea-wrapper">\n                        <span class="label">Note:</span>\n                        <textarea rows="3" class="form-note-textarea">${n}</textarea>\n                    </div>\n                    <div class="form-note-buttons">\n                        <button type="submit">Save</button>\n                        <button class="cancel-note-form back-to-focus">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class="delete-memory-item"> - </div>\n    </div>\n    `},findEl=(e,t)=>$(`#memory-item-container--${e}`).find(`.${t}`).first(),getTagsHTMLOptions=e=>{const t=state.papers[e],o=new Set(t.tags);return Array.from(state.paperTags).sort().map((e,t)=>{let s=`<option value="${e}"`;return o.has(e)&&(s+=' selected="selected" '),s+`>${e}</option>`}).join("")},confirmDelete=e=>{const t=state.papers[e].title;$("body").append(`\n    <div style="width: 100%; height: 100%; background-color:  #e0e0e0; position: absolute; top: 0; left: 0; z-index: 100; display:  flex; justify-content:  center; align-items: center; flex-direction: column" id="confirm-modal">\n    \n    <div style="width: 80%; padding: 32px 32px; text-align: center; font-size: 1.1rem;">\n        Are you sure you want to delete:\n         <p>${t}</p>\n         ?\n    </div>\n    \n    <div style="width: 100%; text-align: center; padding: 32px;">\n        <button style="padding: 8px 16px;" id="cancel-modal-button">Cancel</button>\n        <span style="min-width: 32px;"></span>\n        <button style="padding: 8px 16px;" id="confirm-modal-button">Confirm</button>\n    </div>\n    \n    </div>\n    `),$("#cancel-modal-button").click(()=>{$("#confirm-modal").remove()}),$("#confirm-modal-button").click(()=>{delete state.papers[e],chrome.storage.local.set({papers:state.papers},()=>{state.papersList=Object.values(state.papers),displayMemoryTable(),$("#confirm-modal").remove(),console.log("Successfully deleted '"+t+"' from ArxivMemory")})})},copyAndConfirmMemoryItem=(e,t,o,s)=>{copyTextToClipboard(t);const n=e.replace(".","\\."),a=s?$("#popup-feedback-copied"):findEl(n,"memory-item-feedback");a.text(o),a.fadeIn(),setTimeout(()=>{a.fadeOut()},1e3)},focusExistingOrCreateNewCodeTab=e=>{const{origin:t}=new URL(e);chrome.tabs.query({url:`${t}/*`},t=>{for(const o of t)if(o.url.includes(e)){const e={active:!0},t={focused:!0};return void chrome.windows.getCurrent(s=>{s.id!==o.windowId?chrome.windows.update(o.windowId,t,()=>{chrome.tabs.update(o.id,e)}):chrome.tabs.update(o.id,e)})}chrome.tabs.create({url:e})})},focusExistingOrCreateNewPaperTab=e=>{const t=parseUrl(e.pdfLink).hostname;let o=e.pdfLink.split("/").reverse()[0].replace("-Paper.pdf","").replace(".pdf","");o.match(/\d{5}v\d+$/)&&"arxiv"===e.source&&(o=o.split("v")[0]),chrome.tabs.query({url:`*://${t}/*`},s=>{console.log({hostname:t,match:o,tabs:s});let n=[],a=[];const i=s.map(e=>e.url);let r=0;for(const e of i)e.indexOf(o)>=0&&(n.push(r),e.endsWith(".pdf")&&a.push(r)),r+=1;if(n.length>0){let e;e=a.length>0?s[a[0]]:s[n[0]];const t={active:!0},o={focused:!0};chrome.windows.getCurrent(s=>{s.id!==e.windowId?chrome.windows.update(e.windowId,o,()=>{chrome.tabs.update(e.id,t)}):chrome.tabs.update(e.id,t)})}else chrome.tabs.create({url:e.pdfLink});state.papers[e.id].count+=1,chrome.storage.local.set({papers:state.papers})})},saveNote=(e,t)=>{t=$.trim(t),state.papers[e].note=t;const o=e.replace(".","\\.");chrome.storage.local.set({papers:state.papers},()=>{console.log("Updated the note for "+state.papers[e].title),findEl(o,"memory-note-div").html(t?`\n        <div class="memory-note-div memory-item-faded">\n            <span class="note-content-header">Note:</span>\n            <span class="note-content">${t}</span>\n        </div>\n        `:'<div class="memory-note-div memory-item-faded"></div>'),$(`#popup-form-note-textarea--${o}`).val(t),findEl(o,"form-note-textarea").val(t)})},saveCodeLink=(e,t)=>{t=$.trim(t),state.papers[e].codeLink=t;const o=e.replace(".","\\.");chrome.storage.local.set({papers:state.papers},()=>{console.log("Updated the code for "+state.papers[e].title+" to "+t),findEl(o,"memory-item-code-link").html(t),$("#popup-code-link").text(t),findEl(o,"form-code-input").val(t),t?$("#popup-code-link").show():$("#popup-code-link").hide()})},setMemorySortArrow=e=>{let t;t="up"===e?'<svg class="memory-sort-arrow-svg" id="memory-sort-arrow-up">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrow-narrow-up" />\n                </svg>':'<svg class="memory-sort-arrow-svg" id="memory-sort-arrow-down">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrow-narrow-down" />\n                </svg>',$("#memory-sort-arrow").html(t)},orderPapers=(e,t)=>{let o=e[state.sortKey],s=t[state.sortKey];return"string"==typeof o&&(o=o.toLowerCase(),s=s.toLowerCase()),["addDate","count","lastOpenDate"].indexOf(state.sortKey)>=0?o>s?-1:1:o>s?1:-1},sortMemory=()=>{state.sortedPapers=Object.values(cleanPapers(state.papers)),state.sortedPapers.sort(orderPapers),state.papersList.sort(orderPapers)},reverseMemory=()=>{state.sortedPapers.reverse(),state.papersList.reverse()},filterMemoryByString=e=>{const t=e.split(" ");let o=[];for(const e of state.sortedPapers){const s=e.title.toLowerCase(),n=e.author.toLowerCase(),a=e.note.toLowerCase();t.every(e=>s.includes(e)||n.includes(e)||a.includes(e))&&o.push(e)}state.papersList=o},filterMemoryByTags=e=>{const t=e.replace("t:","").toLowerCase().split(" ");let o=[];for(const e of state.sortedPapers){const s=e.tags.map(e=>e.toLowerCase());t.every(e=>s.some(t=>t.indexOf(e)>=0))&&o.push(e)}state.papersList=o},filterMemoryByCode=e=>{const t=e.replace("c:","").toLowerCase().split(" ");let o=[];for(const e of state.sortedPapers){let s=e.codeLink||"";s=s.toLowerCase(),t.every(e=>s.includes(e))&&o.push(e)}state.papersList=o},updatePaperTagsHTML=e=>{const t=e.replace(".","\\.");findEl(t,"tag-list").html(state.papers[e].tags.map(e=>`<span class="memory-tag">${e}</span>`).join(""))},updateTagOptions=e=>{const t=e.replace(".","\\."),o=getTagsHTMLOptions(e);findEl(t,"memory-item-tags").html(o),$(`#popup-item-tags--${t}`).html(o)},updatePaperTags=(e,t)=>{let o,s=[];if(t.startsWith("#"))o=$(t);else{const s=e.replace(".","\\.");o=findEl(s,t)}o.find(":selected").each((e,t)=>{const o=$.trim($(t).val());""!==o&&s.push(o)}),s.sort(),updated=!1,state.papers[e].tags!==s&&(updated=!0),state.papers[e].tags=s,console.log("Update tags to: "+s.join(", ")),updated&&chrome.storage.local.set({papers:state.papers},()=>{updateTagOptions(e),updatePaperTagsHTML(e),makeTags()})},makeTags=()=>{let e=new Set;for(const t of state.sortedPapers)for(const o of t.tags)e.add(o);state.paperTags=Array.from(e),state.paperTags.sort()},displayMemoryTable=()=>{const e=Date.now();var t=document.getElementById("memory-table");t.innerHTML="";for(const e of state.papersList)t.insertAdjacentHTML("beforeend",getMemoryItemHTML(e));const o=Date.now();console.log("Rendering duration (s): "+(o-e)/1e3),$(".back-to-focus").click(e=>{const{id:t,eid:o}=eventId(e);$(`#memory-item-container--${o}`).focus()}),$(".delete-memory-item").click(e=>{const{id:t,eid:o}=eventId(e);confirmDelete(t)}),$(".memory-item-link").click(e=>{const{id:t,eid:o}=eventId(e);focusExistingOrCreateNewPaperTab(state.papers[t])}),$(".memory-item-code-link").click(e=>{const{id:t,eid:o}=eventId(e),s=state.papers[t].codeLink;focusExistingOrCreateNewCodeTab(s)}),$(".memory-item-md").click(e=>{const{id:t,eid:o}=eventId(e),s=state.papers[t].md;copyAndConfirmMemoryItem(t,s,"Markdown link copied!")}),$(".memory-item-bibtext").click(e=>{const{id:t,eid:o}=eventId(e),s=state.papers[t].bibtext;copyAndConfirmMemoryItem(t,s,"Bibtex copied!")}),$(".memory-item-copy-link").click(e=>{const{id:t,eid:o}=eventId(e),s=state.papers[t].pdfLink;copyAndConfirmMemoryItem(t,s,"Pdf link copied!")}),$(".form-note-textarea").focus(function(){var e=this;setTimeout(function(){e.selectionStart=e.selectionEnd=1e4},0)}),$(".form-note").submit(e=>{e.preventDefault();const{id:t,eid:o}=eventId(e),s=findEl(o,"form-note-textarea").val(),n=findEl(o,"form-code-input").val();saveNote(t,s),saveCodeLink(t,n),updatePaperTags(t,"memory-item-tags"),findEl(o,"memory-item-edit").click()}),$(".cancel-note-form").click(e=>{e.preventDefault();const{id:t,eid:o}=eventId(e);findEl(o,"form-note-textarea").val(state.papers[t].note),findEl(o,"memory-item-tags").html(getTagsHTMLOptions(t)),findEl(o,"memory-item-edit").click()}),$(".memory-item-edit").click(e=>{e.preventDefault();const{id:t,eid:o}=eventId(e),s=findEl(o,"memory-item-edit"),n=findEl(o,"code-and-note"),a=findEl(o,"extended-item"),i=findEl(o,"tag-list"),r=findEl(o,"edit-tags"),l=findEl(o,"memory-item-tags"),d=findEl(o,"memory-item-actions");s.hasClass("expand-open")?(s.removeClass("expand-open"),n.slideDown(250),i.slideDown(250),d.slideDown(250),a.slideUp(250),r.slideUp(250)):(s.addClass("expand-open"),l.select2({placeholder:"Tag paper...",maximumSelectionLength:5,allowClear:!0,tags:!0,width:"75%",tokenSeparators:[","," "],dropdownParent:$(`#memory-item-container--${o}`)}),n.slideUp(250),i.slideUp(250),d.slideUp(250),a.slideDown(250),r.slideDown(250))});const s=Date.now();console.log("Listeners duration (s): "+(s-o)/1e3)},openMemory=()=>{var e=Date.now();state.menuIsOpen&&closeMenu(),state.memoryIsOpen=!0,chrome.storage.local.get("papers",async function({papers:t}){await initState(t),$("#memory-search").attr("placeholder",`Search ${state.papersList.length} entries ...`),state.papersList.length<20?delayTime=0:state.papersList.length<50?delayTime=200:delayTime=350,$("#memory-search").keypress(delay(e=>{const t=$.trim($(e.target).val());t.startsWith("t:")?filterMemoryByTags(t):t.startsWith("c:")?filterMemoryByCode(t):filterMemoryByString(t),displayMemoryTable()},delayTime)).keyup(e=>{8==e.keyCode&&$("#memory-search").trigger("keypress")}),displayMemoryTable(),setTimeout(()=>{$("#memory-container").slideDown({duration:200,easing:"easeOutQuint",complete:()=>{setTimeout(()=>{$("#memory-search").focus(),console.log("Time to display (s): "+(Date.now()-e)/1e3)},50)}})},100)}),$("#tabler-menu").fadeOut(),$("#memory-select").val("lastOpenDate"),setMemorySortArrow("down"),$("#memory-switch-text-on").fadeOut(()=>{$("#memory-switch-text-off").fadeIn()}),$("#memory-select").change(e=>{const t=$(e.target).val();state.sortKey=t,sortMemory(),displayMemoryTable(),setMemorySortArrow("down")}),$("#memory-sort-arrow").click(e=>{"memory-sort-arrow-down"===$("#memory-sort-arrow svg").first()[0].id?setMemorySortArrow("up"):setMemorySortArrow("down"),reverseMemory(),displayMemoryTable()})},closeMemory=()=>{$("#memory-container").slideUp({duration:300,easing:"easeOutQuint"}),$("#memory-switch-text-off").fadeOut(()=>{$("#memory-switch-text-on").fadeIn()}),$("#tabler-menu").fadeIn(),$("#memory-search").val(""),state.memoryIsOpen=!1},closeMenu=()=>{$("#menuDiv").slideUp({duration:300,easing:"easeOutQuint"})&&$("#tabler-menu").fadeOut(()=>{$("#tabler-menu").html('\n                <svg class="tabler-icon">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-adjustments" />\n                </svg>\n            '),$("#tabler-menu").fadeIn()}),state.menuIsOpen=!1},openMenu=()=>{$("#menuDiv").slideDown({duration:300,easing:"easeOutQuint"})&&$("#tabler-menu").fadeOut(()=>{$("#tabler-menu").html('\n            <svg class="tabler-icon menu-svg">\n                <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-circle-x" />\n            </svg>'),$("#tabler-menu").fadeIn()}),state.menuIsOpen=!0};var feedbackTimeout=null,feedbackPrevent=!1;const feedback=()=>{try{clearTimeout(feedbackTimeout),$("#feedback-notif").remove(),feedbackPrevent=!0}catch(e){console.log("No feedback to remove.")}$("#menuDiv").append('\n        <div id="check-feedback">\n            <svg class="tabler-icon">\n                <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-floppy-disk" />\n            </svg>\n        </div>\n    '),$("#check-feedback").animate({right:"12px",opacity:"1"},300,"easeInOutBack"),feedbackTimeout=setTimeout(()=>{$("#check-feedback").animate({right:"-100px",opacity:"0"},300,"easeInOutBack",()=>{!feedbackPrevent&&$("#check-feedback").remove(),feedbackPrevent=!1})},1500)},main=tab=>{const url=parseUrl(tab.url);$("#helpGithubLink").click(()=>{chrome.tabs.update({url:"https://github.com/vict0rsch/ArxivMemory"})}),$("#coblock").click(()=>{chrome.tabs.update({url:"https://marketplace.visualstudio.com/items?itemName=vict0rsch.coblock"})}),$(document).on("keydown",handlePopupKeydown),$("#tabler-menu").click(()=>{state.menuIsOpen?closeMenu():openMenu()}),$("#memory-switch").click(()=>{state.memoryIsOpen?closeMemory():openMemory()}),$("#download-arxivmemory").click(()=>{const e=(new Date).toLocaleString();chrome.storage.local.get("papers",({papers:t})=>{downloadTextFile(JSON.stringify(t),`arxiv-memory-${e}.json`,"text/json")})});const checks=["checkBib","checkMd","checkDownload","checkPdfTitle","checkVanity"];let storageKeys=[...checks,"pdfTitleFn"];chrome.storage.local.get(storageKeys,function(dataItems){const hasKey={};for(const e of checks)hasKey[e]=dataItems.hasOwnProperty(e);const setValues={};for(const e of checks)setValues[e]=!hasKey[e]||dataItems[e];chrome.storage.local.set(setValues,function(){chrome.storage.local.get(checks,function(e){for(const t of checks)$("#"+t).prop("checked",e[t]),setValues[t]=!hasKey[t]||e[t]})});for(const e of checks)$("#"+e).change(function(){const t=this.checked;chrome.storage.local.set({[e]:t},function(){feedback(),console.log(`Settings saved for ${e} (${t})`)})});dataItems.pdfTitleFn&&"string"==typeof dataItems.pdfTitleFn&&(state.pdfTitleFn=getPdfFn(dataItems.pdfTitleFn)),chrome.storage.local.set({pdfTitleFn:state.pdfTitleFn.toString()}),$("#customPdfTitleTextarea").val(pdfTitleFn.toString()),$("#saveCustomPdf").click(()=>{const code=$.trim($("#customPdfTitleTextarea").val());try{const fn=eval(code);fn("test","1.2"),$("#customPdfFeedback").html('<span style="color: green">Saved!</span>'),chrome.storage.local.set({pdfTitleFn:code}),state.pdfTitleFn=fn,setTimeout(()=>{$("#customPdfFeedback").html("")},1e3)}catch(e){$("#customPdfFeedback").html(`<span style="color: red">${e}</span>`)}}),$("#defaultCustomPdf").click(()=>{const e=defaultPDFTitleFn.toString();chrome.storage.local.set({pdfTitleFn:e}),state.pdfTitleFn=defaultPDFTitleFn,$("#customPdfTitleTextarea").val(e),$("#customPdfFeedback").html('<span style="color: green">Saved!</span>'),setTimeout(()=>{$("#customPdfFeedback").html("")},1e3)});const is=isPaper(tab.url);if(Object.values(is).some(e=>e)){$("#notArxiv").hide(),$("#notPdf").hide(),$("#isArxiv").show();const e=parseIdFromUrl(tab.url);chrome.storage.local.get("papers",async({papers:t})=>{if(await initState(t),!t.hasOwnProperty(e))return void console.log("Unknown id "+e);const o=state.papers[e];$("#popup-paper-title").text(o.title),$("#popup-authors").text(o.author),o.codeLink&&($("#popup-code-link").show(),$("#popup-code-link").text(o.codeLink));const s=e.replace(".","\\."),n=getTagsHTMLOptions(e),a=o.note||"";$("#popup-memory-edit").append(`\n                <div style="width: 100%; display: flex; justify-content: space-between; align-items: center;">\n                    <div style="width: 85%">\n                        <div style="width: 100%; display: flex; justify-content: space-between; align-items: center;">\n                            <span class="label">Tags:</span>\n                            <select id="popup-item-tags--${e}"class="memory-item-tags" multiple="multiple">\n                                ${n}\n                            </select>\n                        </div>\n                        <div \n                            class="form-note" \n                            id="popup-form-note--${e}" \n                            style="width: 100%; display: flex; justify-content: space-between; align-items: center; margin-top: 8px; flex-direction: column;"\n                        >\n                            <div class="textarea-wrapper w-100 mr-0">\n                                <span class="label">Code:</span>\n                                <input type="text" class="form-code-input mt-0" value="${o.codeLink||""}">\n                            </div>\n                            <div class="textarea-wrapper w-100 mr-0">\n                                <span class="label">Note:</span>\n                                <textarea \n                                    rows="3" \n                                    style="width:85%;" \n                                    id="popup-form-note-textarea--${e}"\n                                >${a}</textarea>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <button class="back-to-focus" id="popup-save-edits--${e}">Save</button>\n                    </div>\n                </div>\n                    \n                `),$("#popup-copy-icons").html(`\n                    <div\n                        class="memory-item-svg-div" \n                        id="popup-memory-item-link--${e}"\n                        title="Open Paper HTML Page"\n                        style="display: ${"arxiv"!==o.source||url.href.indexOf(".pdf")<0?"none":"inherit"}"\n                    >\n                        <svg  style="height: 25px; width: 25px; pointer-events: none;" >\n                        <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-external-link" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-copy-link--${e}"\n                        title="Copy pdf link" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-link" />\n                        </svg>\n                    </div>\n        \n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-md--${e}"\n                        title="Copy Markdown-formatted link" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-clipboard-list" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-bibtex--${e}"\n                        title="Copy Bibtex citation" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-archive" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-download--${e}"\n                        title="Download pdf" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-download" />\n                        </svg>\n                    </div>\n                `),$(`#popup-item-tags--${s}`).select2({placeholder:"Tag paper...",maximumSelectionLength:5,allowClear:!0,tags:!0,width:"87%",tokenSeparators:[","," "]}),$("body").css("height","auto"),$(`#popup-form-note-textarea--${s}`).focus(function(){var e=this;setTimeout(function(){e.selectionStart=e.selectionEnd=1e4},0)}),$(`#popup-save-edits--${s}`).click(()=>{const t=$(`#popup-form-note-textarea--${s}`).val(),o=$(`#popup-form-note--${s}`).find(".form-code-input").first().val();updatePaperTags(e,`#popup-item-tags--${s}`),saveNote(e,t),saveCodeLink(e,o),$("#popup-feedback-copied").text("Saved tags, code & note!"),$("#popup-feedback-copied").fadeIn(),setTimeout(()=>{$("#popup-feedback-copied").fadeOut()},1e3)}),$(`#popup-memory-item-link--${s}`).click(()=>{chrome.tabs.update({url:`https://arxiv.org/abs/${o.id.replace("Arxiv-","")}`}),window.close()}),$("#popup-code-link").click(()=>{const e=$("#popup-code-link").text();e&&focusExistingOrCreateNewCodeTab(e)}),$(`#popup-memory-item-copy-link--${s}`).click(()=>{const t=state.papers[e].pdfLink;copyAndConfirmMemoryItem(e,t,"Pdf link copied!",!0)}),$(`#popup-memory-item-md--${s}`).click(()=>{const t=state.papers[e].md;copyAndConfirmMemoryItem(e,t,"MarkDown link copied!",!0)}),$(`#popup-memory-item-bibtex--${s}`).click(()=>{const t=formatBibtext(state.papers[e].bibtext);copyAndConfirmMemoryItem(e,t,"Bibtex citation copied!",!0)}),$(`#popup-memory-item-download--${s}`).click(()=>{let e=statePdfTitle(o.title,o.id);console.log({pdfTitle:e}),chrome.downloads.download({url:o.pdfLink,filename:e.replaceAll(":","_")})})})}})};$(()=>{chrome.tabs.query({active:!0,lastFocusedWindow:!0},async function(e){e[0].url;main(e[0])})});