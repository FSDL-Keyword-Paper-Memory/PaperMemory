function delay(e,t){let o=0;return function(...n){clearTimeout(o),o=setTimeout(e.bind(this,...n),t||0)}}function fallbackCopyTextToClipboard(e){var t=document.createElement("textarea");t.value=e,t.style.top="0",t.style.left="0",t.style.position="fixed",document.body.appendChild(t),t.focus(),t.select();try{var o=document.execCommand("copy"),n=o?"successful":"unsuccessful";console.log("Fallback: Copying text command was "+n)}catch(e){console.error("Fallback: Oops, unable to copy",e)}document.body.removeChild(t)}function copyTextToClipboard(e){navigator.clipboard?navigator.clipboard.writeText(e).then(function(){console.log("Async: Copying to clipboard was successful!")},function(e){console.error("Async: Could not copy text: ",e)}):fallbackCopyTextToClipboard(e)}function parseUrl(e){var t=document.createElement("a");return t.href=e,t}var state={menuIsOpen:!1,memoryIsOpen:!1,papers:{},papersList:[],sortedPapers:[],sortKey:"",paperTags:new Set,dataVersion:0};const getMemoryItemHTML=e=>{const t=new Date(e.addDate).toLocaleString().replace(",",""),o=new Date(e.lastOpenDate).toLocaleString().replace(",",""),n=e.id.indexOf("_")<0?e.id:e.id.split("_")[0],s=e.note||"[no note]",a=e.id,r=new Set(e.tags),i=getTagsHTMLOptions(a);return`\n    <div class="memory-item-container" tabindex="0" id="memory-item-container--${a}">\n\n        <h4 class="memory-item-title" title="Added ${t}&#13;&#10;Last open ${o}">\n            ${e.title}\n        </h4>\n        <div style="margin: 4px 0px;">\n            <small class="tag-list" id="tag-list--${a}">\n                ${Array.from(r).map(e=>`<span class="memory-tag">${e}</span>`).join("")}\n            </small>\n            <div id="edit-tags--${a}" style="padding: 12px 0px; display: none; ">\n                <div style="display:flex; align-items: center"; justify-content: space-between">\n                    <select id="memory-item-tags--${a}"class="memory-item-tags" multiple="multiple">\n                        ${i}\n                    </select>\n                    <button class="back-to-focus" style="margin-left: 12px" id="save-tag-edit--${a}">Save</button>\n                    <button class="back-to-focus" style="margin-left: 12px" id="cancel-tag-edit--${a}">Cancel</button>\n                </div>\n            </div>\n        </div>\n        <small>${e.author}</small>\n\n        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 2px">\n\n        \n            <div style="display: flex; align-items: center">\n                <div\n                    class="memory-item-expand memory-item-svg-div"\n                    id="memory-item-expand--${a}"\n                    title="Expand paper details"\n                    style="margin-right: 3px"\n                >\n                    <svg  style="height: 15px; width: 15px; pointer-events: none;" >\n                        <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrows-vertical" />\n                    </svg>\n                </div>\n                <small>\n                    ${n}\n                </small>\n            </div>\n\n            <div\n                class="memory-item-tag memory-item-svg-div" \n                id="memory-item-tag--${a}"\n                title="Open ${e.pdfLink}" \n            >\n                <svg  style="height: 15px; width: 15px; pointer-events: none;" >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-tag" />\n                </svg>\n            </div>\n            <div\n                class="memory-item-link memory-item-svg-div" \n                id="memory-item-link--${a}"\n                title="Open ${e.pdfLink}" \n            >\n                <svg  style="height: 15px; width: 15px; pointer-events: none;" >\n                   <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-external-link" />\n                </svg>\n            </div>\n                \n            <div \n                class="memory-item-copy-link memory-item-svg-div"\n                id="memory-item-copy-link--${a}"\n                title="Copy pdf link" \n            >\n                <svg style="height: 15px; width: 15px; pointer-events: none;" >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-link" />\n                </svg>\n            </div>\n\n            <div \n                class="memory-item-md memory-item-svg-div"\n                id="memory-item-md--${a}"\n                title="Copy Markdown-formatted link" \n            >\n                <svg style="height: 15px; width: 15px; pointer-events: none;" >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-clipboard-list" />\n                </svg>\n            </div>\n\n            <span style="color: green; display: none" id="memory-item-feedback--${a}"></span>\n            \n            <div title="Number of times you have loaded&#13;&#10;the paper's Page or PDF">\n                Visits: ${e.count}\n            </div>\n\n        </div>\n\n        <div id="extended-item--${a}" class="extended-item" style="display: none">\n            <div id="item-note--${a}">\n                <p style="font-size: 0.8rem;">\n                    <span id="note-content--${a}">${s}</span>\n                    <span id="edit-note-item--${a}" class="edit-note-item">(edit)</span>\n                </p>\n                <form class="form-note" id="form-note--${a}" style="display: none">\n                    <textarea style="width:98%" id="form-note-textarea--${a}">${s}</textarea>\n                    <div class="form-note-buttons">\n                        <button type="submit">Save</button>\n                        <button class="cancel-note-form back-to-focus" id="cancel-note-form--${a}">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class="delete-memory-item" id="delete-memory-item--${a}"> - </div>\n    </div>\n    `},getTagsHTMLOptions=e=>{const t=state.papers[e],o=new Set(t.tags);return Array.from(state.paperTags).sort().map((e,t)=>{let n=`<option value="${e}"`;return o.has(e)&&(n+=' selected="selected" '),n+`>${e}</option>`}).join("")},confirmDelete=e=>{const t=state.papers[e].title;$("body").append(`\n    <div style="width: 100%; height: 100%; background-color:  #e0e0e0; position: absolute; top: 0; left: 0; z-index: 100; display:  flex; justify-content:  center; align-items: center; flex-direction: column" id="confirm-modal">\n    \n    <div style="width: 80%; padding: 32px 32px; text-align: center; font-size: 1.1rem;">\n        Are you sure you want to delete:\n         <p>${t}</p>\n         ?\n    </div>\n    \n    <div style="width: 100%; text-align: center; padding: 32px;">\n        <button style="padding: 8px 16px;" id="cancel-modal-button">Cancel</button>\n        <span style="min-width: 32px;"></span>\n        <button style="padding: 8px 16px;" id="confirm-modal-button">Confirm</button>\n    </div>\n    \n    </div>\n    `),$("#cancel-modal-button").click(()=>{$("#confirm-modal").remove()}),$("#confirm-modal-button").click(()=>{delete state.papers[e],chrome.storage.local.set({papers:state.papers},()=>{state.papersList=Object.values(state.papers),displayMemoryTable(),$("#confirm-modal").remove(),console.log("Successfully deleted '"+t+"' from ArxivMemory")})})},copyAndConfirmMemoryItem=(e,t,o,n)=>{copyTextToClipboard(t);const s=e.replace(".","\\."),a=n?"#popup-feedback-copied":`#memory-item-feedback--${s}`;$(a).text(o),$(a).fadeIn(),setTimeout(()=>{$(a).text("")},1e3)},focusExistingOrCreateNewTab=(e,t)=>{chrome.tabs.query({url:"https://arxiv.org/*"},o=>{let n=[],s=[];const a=o.map(e=>e.url);let r=0;for(const e of a)e.indexOf(t)>=0&&(n.push(r),e.endsWith(".pdf")&&s.push(r)),r+=1;if(n.length>0){let e;e=s.length>0?o[s[0]]:o[n[0]];const t={active:!0},a={focused:!0};chrome.windows.getCurrent(o=>{o.id!==e.windowId?chrome.windows.update(e.windowId,a,()=>{chrome.tabs.update(e.id,t)}):chrome.tabs.update(e.id,t)})}else chrome.tabs.create({url:e});state.papers[t].count+=1,chrome.storage.local.set({papers:state.papers})})},saveNote=(e,t)=>{t=$.trim(t),state.papers[e].note=t;const o=e.replace(".","\\.");chrome.storage.local.set({papers:state.papers},()=>{console.log("Updated the note for "+state.papers[e].title),$(`#form-note--${o}`).hide(),$(`#note-content--${o}`).text(t),$(`#popup-form-note-textarea--${o}`).val(t),$(`#form-note-textarea--${o}`).val(t)})},setMemorySortArrow=e=>{let t;t="up"===e?'<svg class="memory-sort-arrow-svg" id="memory-sort-arrow-up">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrow-narrow-up" />\n                </svg>':'<svg class="memory-sort-arrow-svg" id="memory-sort-arrow-down">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrow-narrow-down" />\n                </svg>',$("#memory-sort-arrow").html(t)},orderPapers=(e,t)=>{let o=e[state.sortKey],n=t[state.sortKey];return"string"==typeof o&&(o=o.toLowerCase(),n=n.toLowerCase()),["addDate","count","lastOpenDate"].indexOf(state.sortKey)>=0?o>n?-1:1:o>n?1:-1},sortMemory=()=>{state.sortedPapers=Object.values(state.papers),state.sortedPapers.sort(orderPapers),state.papersList.sort(orderPapers)},reverseMemory=()=>{state.sortedPapers.reverse(),state.papersList.reverse()},filterMemoryByString=e=>{const t=e.split(" ");let o=[];for(const e of state.sortedPapers){const n=e.title.toLowerCase(),s=e.author.toLowerCase(),a=e.note.toLowerCase();t.every(e=>n.includes(e)||s.includes(e)||a.includes(e))&&o.push(e)}state.papersList=o},filterMemoryByTags=e=>{const t=e.replace("t:","").toLowerCase().split(" ");let o=[];for(const e of state.sortedPapers){const n=e.tags.map(e=>e.toLowerCase());t.every(e=>n.some(t=>t.indexOf(e)>=0))&&o.push(e)}state.papersList=o},updatePaperTagsHTML=e=>{const t=e.replace(".","\\.");$(`#tag-list--${t}`).html(state.papers[e].tags.map(e=>`<span class="memory-tag">${e}</span>`).join(""))},updateTagOptions=e=>{const t=e.replace(".","\\."),o=getTagsHTMLOptions(e);$(`#memory-item-tags--${t}`).html(o),$(`#popup-item-tags--${t}`).html(o)},updatePaperTags=(e,t)=>{let o=[];$(t).find(":selected").each((e,t)=>{const n=$.trim($(t).val());""!==n&&o.push(n)}),o.sort(),updated=!1,state.papers[e].tags!==o&&(updated=!0),state.papers[e].tags=o,console.log("Update tags to: "+o.join(", ")),updated&&chrome.storage.local.set({papers:state.papers},()=>{updateTagOptions(e),updatePaperTagsHTML(e),makeTags()})},makeTags=()=>{let e=new Set;for(const t of state.sortedPapers)for(const o of t.tags)e.add(o);state.paperTags=Array.from(e),state.paperTags.sort()},migrateData=(e,t)=>{if(e.hasOwnProperty("__dataVersion")&&e.__dataVersion===t)return delete e.__dataVersion,e;delete e.__dataVersion;for(const t in e)e[t].hasOwnProperty("bibtext")||(e[t].bibtext="",console.log("Migrating bibtext for "+t));return e.__dataVersion=t,chrome.storage.local.set({papers:e},()=>{console.log("Migrated papers:"),console.log(e)}),delete e.__dataVersion,e},displayMemoryTable=()=>{$("#memory-table").html("");for(const e of state.papersList)$("#memory-table").append(getMemoryItemHTML(e));$(".back-to-focus").click(e=>{const{id:t,eid:o}=eventId(e);$(`#memory-item-container--${o}`).focus()}),$(".delete-memory-item").click(e=>{const{id:t,eid:o}=eventId(e);confirmDelete(t)}),$(".memory-item-link").click(e=>{const{id:t,eid:o}=eventId(e),n=state.papers[t].pdfLink;focusExistingOrCreateNewTab(n,t)}),$(".memory-item-md").click(e=>{const{id:t,eid:o}=eventId(e),n=state.papers[t].md;copyAndConfirmMemoryItem(t,n,"Markdown link copied!")}),$(".memory-item-copy-link").click(e=>{const{id:t,eid:o}=eventId(e),n=state.papers[t].pdfLink;copyAndConfirmMemoryItem(t,n,"Pdf link copied!")}),$(".memory-item-tag").click(e=>{const{id:t,eid:o}=eventId(e);$(`#tag-list--${o}`).hide(),$(`#edit-tags--${o}`).show(),$(`#memory-item-tags--${o}`).select2({placeholder:"Tag paper...",maximumSelectionLength:5,allowClear:!0,tags:!0,width:"75%",tokenSeparators:[","," "]}),$(`#memory-item-tags--${o}`).focus(),$(`#save-tag-edit--${o}`).click(()=>{updatePaperTags(t,`#memory-item-tags--${o}`),$(`#edit-tags--${o}`).hide(),$(`#tag-list--${o}`).show()}),$(`#cancel-tag-edit--${o}`).click(()=>{$(`#edit-tags--${o}`).hide(),$(`#tag-list--${o}`).show(),$(`#memory-item-tags--${o}`).html(getTagsHTMLOptions(t))})}),$(".form-note").submit(e=>{e.preventDefault();const{id:t,eid:o}=eventId(e),n=$(`#form-note-textarea--${o}`).val();saveNote(t,n)}),$(".edit-note-item").click(e=>{e.preventDefault();const{id:t,eid:o}=eventId(e);$(`#form-note--${o}`).fadeIn()}),$(".cancel-note-form").click(e=>{e.preventDefault();const{id:t,eid:o}=eventId(e);$(`#form-note--${o}`).hide(),$(`#form-note-textarea--${o}`).val(state.papers[t].note)}),$(".memory-item-expand").click(e=>{e.preventDefault();const{id:t,eid:o}=eventId(e);$(`#memory-item-expand--${o}`).hasClass("expand-open")?($(`#memory-item-expand--${o}`).removeClass("expand-open"),$(`#extended-item--${o}`).slideUp()):($(`#memory-item-expand--${o}`).addClass("expand-open"),$(`#extended-item--${o}`).slideDown())})},initState=e=>{console.log("Found papers:"),console.log(e),state.dataVersion=2,e=migrateData(e,state.dataVersion),state.papers=e,state.papersList=Object.values(e),state.sortKey="lastOpenDate",sortMemory(),makeTags()},openMemory=()=>{state.menuIsOpen&&closeMenu(),$("#tabler-menu").fadeOut(),$("#memory-select").val("lastOpenDate"),setMemorySortArrow("down"),$("#memory-container").slideDown({duration:300,easing:"easeOutQuint",complete:()=>{chrome.storage.local.get("papers",function({papers:e}){initState(e),$("#memory-search").attr("placeholder",`Search ${state.papersList.length} entries ...`),state.papersList.length<20?delayTime=0:state.papersList.length<50?delayTime=200:delayTime=350,$("#memory-search").keypress(delay(e=>{const t=$.trim($(e.target).val());t.startsWith("t:")?filterMemoryByTags(t):filterMemoryByString(t),displayMemoryTable()},delayTime)).keyup(e=>{8==e.keyCode&&$("#memory-search").trigger("keypress")}),displayMemoryTable(),setTimeout(()=>{$("#memory-search").focus()},400)})}}),$("#memory-switch-text-on").fadeOut(()=>{$("#memory-switch-text-off").fadeIn()}),$("#memory-select").change(e=>{const t=$(e.target).val();state.sortKey=t,sortMemory(),displayMemoryTable(),setMemorySortArrow("down")}),$("#memory-sort-arrow").click(e=>{"memory-sort-arrow-down"===$("#memory-sort-arrow svg").first()[0].id?setMemorySortArrow("up"):setMemorySortArrow("down"),reverseMemory(),displayMemoryTable()}),$(document).on("keydown",function(e){if(!state.memoryIsOpen)return;if([8,13,69,78].indexOf(e.which)<0)return;const t=$(".memory-item-container:focus").first();if(1!==t.length)return;e.preventDefault();const o=t.attr("id").split("--")[1],n=o.replace(".","\\.");13==e.which?$(`#memory-item-link--${n}`).click():8==e.which?$(`#delete-memory-item--${n}`).click():69==e.which?$(`#memory-item-tag--${n}`).click():78==e.which&&($(`#memory-item-expand--${n}`).click(),$(`#edit-note-item--${n}`).click(),$(`#form-note-textarea--${n}`).focus())})},closeMemory=()=>{$("#memory-container").slideUp({duration:500,easing:"easeOutQuint"}),$("#memory-switch-text-off").fadeOut(()=>{$("#memory-switch-text-on").fadeIn()}),$("#tabler-menu").fadeIn()},downloadTextFile=(e,t,o)=>{var n=document.createElement("a"),s=new Blob([e],{type:o});n.href=URL.createObjectURL(s),n.download=t,n.click()},eventId=e=>{const t=e.target.id.split("--")[1],o=t.replace(".","\\.");return{id:t,eid:o}},closeMenu=()=>{$("#menuDiv").slideUp({duration:500,easing:"easeOutQuint"})&&$("#tabler-menu").fadeOut(()=>{$("#tabler-menu").html('\n                <svg class="tabler-icon">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-adjustments" />\n                </svg>\n            '),$("#tabler-menu").fadeIn()})},openMenu=()=>{$("#menuDiv").slideDown({duration:500,easing:"easeOutQuint"})&&$("#tabler-menu").fadeOut(()=>{$("#tabler-menu").html('\n        <svg class="tabler-icon menu-svg">\n            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-circle-x" />\n        </svg>\n    '),$("#tabler-menu").fadeIn()})},main=e=>{var t=null,o=!1;const n=()=>{try{clearTimeout(t),$("#feedback-notif").remove(),o=!0}catch(e){console.log("No feedback to remove.")}$("#menuDiv").append('\n            <div id="check-feedback">\n                <svg class="tabler-icon">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-floppy-disk" />\n                </svg>\n            </div>\n        '),$("#check-feedback").animate({right:"12px",opacity:"1"},300,"easeInOutBack"),t=setTimeout(()=>{$("#check-feedback").animate({right:"-100px",opacity:"0"},300,"easeInOutBack",()=>{!o&&$("#check-feedback").remove(),o=!1})},1500)},s=parseUrl(e.url);$("#helpGithubLink").click(()=>{chrome.tabs.update({url:"https://github.com/vict0rsch/ArxivTools"})}),$("#coblock").click(()=>{chrome.tabs.update({url:"https://marketplace.visualstudio.com/items?itemName=vict0rsch.coblock"})}),$(document).on("keydown",function(e){if(!state.memoryIsOpen&&13==e.which){const e=$("#memory-switch-text-on:focus").first();if(1!==e.length)return;$("#memory-switch-text-on").click()}}),$("#tabler-menu").click(()=>{state.menuIsOpen?closeMenu():openMenu(),state.menuIsOpen=!state.menuIsOpen}),$("#memory-switch").click(()=>{state.memoryIsOpen?closeMemory():openMemory(),state.memoryIsOpen=!state.memoryIsOpen}),$("#download-arxivmemory").click(()=>{const e=(new Date).toLocaleString();chrome.storage.local.get("papers",({papers:t})=>{downloadTextFile(JSON.stringify(t),`arxiv-memory-${e}.json`,"text/json")})});const a=["checkBib","checkMd","checkDownload","checkPdfTitle","checkVanity","checkMemory"];chrome.storage.local.get(a,function(e){const t={};for(const o of a)t[o]=e.hasOwnProperty(o);const o={};for(const n of a)o[n]=!t[n]||e[n];chrome.storage.local.set(o,function(){chrome.storage.local.get(a,function(e){for(const n of a)$("#"+n).prop("checked",e[n]),o[n]=!t[n]||e[n]})});for(const e of a)$("#"+e).change(function(){const t=this.checked;chrome.storage.local.set({[e]:t},function(){n(),console.log(`Settings saved for ${e} (${t})`)})});if("arxiv.org"===s.hostname){$("#notArxiv").hide(),$("#notPdf").hide(),$("#isArxiv").show();const e=s.href.split("/").reverse()[0].replace(".pdf","").split("v")[0];chrome.storage.local.get("papers",({papers:t})=>{if(!t.hasOwnProperty(e))return;initState(t);const o=t[e];$("#popup-paper-title").text(o.title),$("#popup-authors").text(o.author);const n=e.replace(".","\\."),a=getTagsHTMLOptions(e),r=o.note||"";$("#popup-memory-edit").append(`\n                    <div style="width: 100%; display: flex; justify-content: space-between; align-items: center;">\n                        <span style="margin-right: 4px">Tags:</span>\n                        <select id="popup-item-tags--${e}"class="memory-item-tags" multiple="multiple">\n                            ${a}\n                        </select>\n                        <button class="back-to-focus" id="popup-save-tag-edit--${e}">Save</button>\n                    </div>\n                    <form \n                        class="form-note" \n                        id="popup-form-note--${e}" \n                        style="width: 100%; display: flex; justify-content: space-between; align-items: center; margin-top: 8px;"\n                    >\n                        <span style="margin-right: 4px">Note:</span>\n                        <textarea \n                            rows="3" \n                            style="width:68%; border-radius: 4px; border-color: #aaaaaa" \n                            id="popup-form-note-textarea--${e}"\n                        >${r}</textarea>\n                        <button type="submit">Save</button>\n                    </form>\n                    \n                `),$("#popup-copy-icons").html(`\n                    <div\n                        class="memory-item-svg-div" \n                        id="popup-memory-item-link--${e}"\n                        title="Open Paper Arxiv Page"\n                        style="display: ${s.href.indexOf(".pdf")<0?"none":"inherit"}"\n                    >\n                        <svg  style="height: 25px; width: 25px; pointer-events: none;" >\n                        <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-external-link" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-copy-link--${e}"\n                        title="Copy pdf link" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-link" />\n                        </svg>\n                    </div>\n        \n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-md--${e}"\n                        title="Copy Markdown-formatted link" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-clipboard-list" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-bibtex--${e}"\n                        title="Copy Bibtex citation" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-archive" />\n                        </svg>\n                    </div>\n                `),$(`#popup-item-tags--${n}`).select2({placeholder:"Tag paper...",maximumSelectionLength:5,allowClear:!0,tags:!0,width:"70%",tokenSeparators:[","," "]}),$("body").css("height","auto"),$(`#popup-save-tag-edit--${n}`).click(()=>{updatePaperTags(e,`#popup-item-tags--${n}`),$("#popup-feedback-copied").text("Saved tags!"),$("#popup-feedback-copied").fadeIn(),setTimeout(()=>{$("#popup-feedback-copied").text("")},1e3)}),$(`#popup-form-note--${n}`).submit(t=>{t.preventDefault();const o=$(`#popup-form-note-textarea--${n}`).val();saveNote(e,o),$("#popup-feedback-copied").text("Saved note!"),$("#popup-feedback-copied").fadeIn(),setTimeout(()=>{$("#popup-feedback-copied").text("")},1e3)}),$(`#popup-memory-item-link--${n}`).click(()=>{chrome.tabs.update({url:`https://arxiv.org/abs/${o.id}`}),window.close()}),$(`#popup-memory-item-copy-link--${n}`).click(()=>{const t=state.papers[e].pdfLink;copyAndConfirmMemoryItem(e,t,"Pdf link copied!",!0)}),$(`#popup-memory-item-md--${n}`).click(()=>{const t=state.papers[e].md;copyAndConfirmMemoryItem(e,t,"MarkDown link copied!",!0)}),$(`#popup-memory-item-bibtex--${n}`).click(()=>{const t=state.papers[e].bibtext;copyAndConfirmMemoryItem(e,t,"Bibtex citation copied!",!0)})})}})};$(()=>{chrome.tabs.query({active:!0,lastFocusedWindow:!0},function(e){e[0].url;main(e[0])})});