const getMemoryItemHTML=e=>{const t=new Date(e.addDate).toLocaleString().replace(",",""),n=new Date(e.lastOpenDate).toLocaleString().replace(",",""),s=e.id.indexOf("_")<0?e.id:e.id.split("_")[0],o=e.note||"[no note]",i=e.id,a=new Set(e.tags),r=getTagsHTMLOptions(i);return`\n    <div class="memory-item-container" tabindex="0" id="memory-item-container--${i}">\n\n        <h4 class="memory-item-title" title="Added ${t}&#13;&#10;Last open ${n}">\n            ${e.title}\n        </h4>\n        <div style="margin: 4px 0px;">\n            <small class="tag-list" id="tag-list--${i}">\n                ${Array.from(a).map(e=>`<span class="memory-tag">${e}</span>`).join("")}\n            </small>\n            <div id="edit-tags--${i}" style="padding: 12px 0px; display: none; ">\n                <div style="display:flex; align-items: center"; justify-content: space-between">\n                    <select id="memory-item-tags--${i}"class="memory-item-tags" multiple="multiple">\n                        ${r}\n                    </select>\n                    <button class="back-to-focus" style="margin-left: 12px" id="save-tag-edit--${i}">Save</button>\n                    <button class="back-to-focus" style="margin-left: 12px" id="cancel-tag-edit--${i}">Cancel</button>\n                </div>\n            </div>\n        </div>\n        <small>${e.author}</small>\n\n        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 2px">\n\n            <div style="display: flex; align-items: center">\n                <div\n                    class="memory-item-expand memory-item-svg-div"\n                    id="memory-item-expand--${i}"\n                    title="Expand paper details"\n                    style="margin-right: 8px"\n                >\n                    <svg  style="height: 15px; width: 15px; pointer-events: none;" >\n                        <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrows-vertical" />\n                    </svg>\n                </div>\n\n                <div\n                    class="memory-item-tag memory-item-svg-div" \n                    id="memory-item-tag--${i}"\n                    title="Open ${e.pdfLink}" \n                    style="margin-right: 8px"\n                >\n                    <svg  style="height: 15px; width: 15px; pointer-events: none;" >\n                        <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-tag" />\n                    </svg>\n                </div>\n                \n                <small>\n                        ${s}\n                </small>\n                        \n            </div>\n\n            <div\n                class="memory-item-link memory-item-svg-div" \n                id="memory-item-link--${i}"\n                title="Open ${e.pdfLink}" \n            >\n                <svg  style="height: 15px; width: 15px; pointer-events: none;" >\n                   <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-external-link" />\n                </svg>\n            </div>\n                \n            <div \n                class="memory-item-copy-link memory-item-svg-div"\n                id="memory-item-copy-link--${i}"\n                title="Copy pdf link" \n            >\n                <svg style="height: 15px; width: 15px; pointer-events: none;" >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-link" />\n                </svg>\n            </div>\n\n            <div \n                class="memory-item-md memory-item-svg-div"\n                id="memory-item-md--${i}"\n                title="Copy Markdown-formatted link" \n            >\n                <svg style="height: 15px; width: 15px; pointer-events: none;" >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-clipboard-list" />\n                </svg>\n            </div>\n\n            <div \n                class="memory-item-bibtext memory-item-svg-div"\n                id="memory-item-bibtext--${i}"\n                title="Copy Bibtex citation" \n            >\n                <svg style="height: 15px; width: 15px; pointer-events: none;" >\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-archive" />\n                </svg>\n            </div>\n\n            <span style="color: green; display: none" id="memory-item-feedback--${i}"></span>\n            \n            <div title="Number of times you have loaded&#13;&#10;the paper's Page or PDF">\n                Visits: ${e.count}\n            </div>\n\n        </div>\n\n        <div id="extended-item--${i}" class="extended-item" style="display: none">\n            <div id="item-note--${i}">\n                <p style="font-size: 0.8rem;">\n                    <span id="note-content--${i}">${o}</span>\n                    <span id="edit-note-item--${i}" class="edit-note-item">(edit)</span>\n                </p>\n                <form class="form-note" id="form-note--${i}" style="display: none">\n                    <textarea style="width:98%" id="form-note-textarea--${i}">${o}</textarea>\n                    <div class="form-note-buttons">\n                        <button type="submit">Save</button>\n                        <button class="cancel-note-form back-to-focus" id="cancel-note-form--${i}">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class="delete-memory-item" id="delete-memory-item--${i}"> - </div>\n    </div>\n    `},getTagsHTMLOptions=e=>{const t=state.papers[e],n=new Set(t.tags);return Array.from(state.paperTags).sort().map((e,t)=>{let s=`<option value="${e}"`;return n.has(e)&&(s+=' selected="selected" '),s+`>${e}</option>`}).join("")},confirmDelete=e=>{const t=state.papers[e].title;$("body").append(`\n    <div style="width: 100%; height: 100%; background-color:  #e0e0e0; position: absolute; top: 0; left: 0; z-index: 100; display:  flex; justify-content:  center; align-items: center; flex-direction: column" id="confirm-modal">\n    \n    <div style="width: 80%; padding: 32px 32px; text-align: center; font-size: 1.1rem;">\n        Are you sure you want to delete:\n         <p>${t}</p>\n         ?\n    </div>\n    \n    <div style="width: 100%; text-align: center; padding: 32px;">\n        <button style="padding: 8px 16px;" id="cancel-modal-button">Cancel</button>\n        <span style="min-width: 32px;"></span>\n        <button style="padding: 8px 16px;" id="confirm-modal-button">Confirm</button>\n    </div>\n    \n    </div>\n    `),$("#cancel-modal-button").click(()=>{$("#confirm-modal").remove()}),$("#confirm-modal-button").click(()=>{delete state.papers[e],chrome.storage.local.set({papers:state.papers},()=>{state.papersList=Object.values(state.papers),displayMemoryTable(),$("#confirm-modal").remove(),console.log("Successfully deleted '"+t+"' from ArxivMemory")})})},copyAndConfirmMemoryItem=(e,t,n,s)=>{copyTextToClipboard(t);const o=e.replace(".","\\."),i=s?"#popup-feedback-copied":`#memory-item-feedback--${o}`;$(i).text(n),$(i).fadeIn(),setTimeout(()=>{$(i).text("")},1e3)},focusExistingOrCreateNewTab=(e,t)=>{chrome.tabs.query({url:"https://arxiv.org/*"},n=>{let s=[],o=[];const i=n.map(e=>e.url);let a=0;for(const e of i)e.indexOf(t)>=0&&(s.push(a),e.endsWith(".pdf")&&o.push(a)),a+=1;if(s.length>0){let e;e=o.length>0?n[o[0]]:n[s[0]];const t={active:!0},i={focused:!0};chrome.windows.getCurrent(n=>{n.id!==e.windowId?chrome.windows.update(e.windowId,i,()=>{chrome.tabs.update(e.id,t)}):chrome.tabs.update(e.id,t)})}else chrome.tabs.create({url:e});state.papers[t].count+=1,chrome.storage.local.set({papers:state.papers})})},saveNote=(e,t)=>{t=$.trim(t),state.papers[e].note=t;const n=e.replace(".","\\.");chrome.storage.local.set({papers:state.papers},()=>{console.log("Updated the note for "+state.papers[e].title),$(`#form-note--${n}`).hide(),$(`#note-content--${n}`).text(t),$(`#popup-form-note-textarea--${n}`).val(t),$(`#form-note-textarea--${n}`).val(t)})},setMemorySortArrow=e=>{let t;t="up"===e?'<svg class="memory-sort-arrow-svg" id="memory-sort-arrow-up">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrow-narrow-up" />\n                </svg>':'<svg class="memory-sort-arrow-svg" id="memory-sort-arrow-down">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-arrow-narrow-down" />\n                </svg>',$("#memory-sort-arrow").html(t)},orderPapers=(e,t)=>{let n=e[state.sortKey],s=t[state.sortKey];return"string"==typeof n&&(n=n.toLowerCase(),s=s.toLowerCase()),["addDate","count","lastOpenDate"].indexOf(state.sortKey)>=0?n>s?-1:1:n>s?1:-1},sortMemory=()=>{state.sortedPapers=Object.values(state.papers),state.sortedPapers.sort(orderPapers),state.papersList.sort(orderPapers)},reverseMemory=()=>{state.sortedPapers.reverse(),state.papersList.reverse()},filterMemoryByString=e=>{const t=e.split(" ");let n=[];for(const e of state.sortedPapers){const s=e.title.toLowerCase(),o=e.author.toLowerCase(),i=e.note.toLowerCase();t.every(e=>s.includes(e)||o.includes(e)||i.includes(e))&&n.push(e)}state.papersList=n},filterMemoryByTags=e=>{const t=e.replace("t:","").toLowerCase().split(" ");let n=[];for(const e of state.sortedPapers){const s=e.tags.map(e=>e.toLowerCase());t.every(e=>s.some(t=>t.indexOf(e)>=0))&&n.push(e)}state.papersList=n},updatePaperTagsHTML=e=>{const t=e.replace(".","\\.");$(`#tag-list--${t}`).html(state.papers[e].tags.map(e=>`<span class="memory-tag">${e}</span>`).join(""))},updateTagOptions=e=>{const t=e.replace(".","\\."),n=getTagsHTMLOptions(e);$(`#memory-item-tags--${t}`).html(n),$(`#popup-item-tags--${t}`).html(n)},updatePaperTags=(e,t)=>{let n=[];$(t).find(":selected").each((e,t)=>{const s=$.trim($(t).val());""!==s&&n.push(s)}),n.sort(),updated=!1,state.papers[e].tags!==n&&(updated=!0),state.papers[e].tags=n,console.log("Update tags to: "+n.join(", ")),updated&&chrome.storage.local.set({papers:state.papers},()=>{updateTagOptions(e),updatePaperTagsHTML(e),makeTags()})},makeTags=()=>{let e=new Set;for(const t of state.sortedPapers)for(const n of t.tags)e.add(n);state.paperTags=Array.from(e),state.paperTags.sort()},displayMemoryTable=()=>{$("#memory-table").html("");for(const e of state.papersList)$("#memory-table").append(getMemoryItemHTML(e));$(".back-to-focus").click(e=>{const{id:t,eid:n}=eventId(e);$(`#memory-item-container--${n}`).focus()}),$(".delete-memory-item").click(e=>{const{id:t,eid:n}=eventId(e);confirmDelete(t)}),$(".memory-item-link").click(e=>{const{id:t,eid:n}=eventId(e),s=state.papers[t].pdfLink;focusExistingOrCreateNewTab(s,t)}),$(".memory-item-md").click(e=>{const{id:t,eid:n}=eventId(e),s=state.papers[t].md;copyAndConfirmMemoryItem(t,s,"Markdown link copied!")}),$(".memory-item-bibtext").click(e=>{const{id:t,eid:n}=eventId(e),s=state.papers[t].bibtext;copyAndConfirmMemoryItem(t,s,"Bibtex copied!")}),$(".memory-item-copy-link").click(e=>{const{id:t,eid:n}=eventId(e),s=state.papers[t].pdfLink;copyAndConfirmMemoryItem(t,s,"Pdf link copied!")}),$(".memory-item-tag").click(e=>{const{id:t,eid:n}=eventId(e);$(`#tag-list--${n}`).hide(),$(`#edit-tags--${n}`).show(),$(`#memory-item-tags--${n}`).select2({placeholder:"Tag paper...",maximumSelectionLength:5,allowClear:!0,tags:!0,width:"75%",tokenSeparators:[","," "]}),$(`#memory-item-tags--${n}`).focus(),$(`#save-tag-edit--${n}`).click(()=>{updatePaperTags(t,`#memory-item-tags--${n}`),$(`#edit-tags--${n}`).hide(),$(`#tag-list--${n}`).show()}),$(`#cancel-tag-edit--${n}`).click(()=>{$(`#edit-tags--${n}`).hide(),$(`#tag-list--${n}`).show(),$(`#memory-item-tags--${n}`).html(getTagsHTMLOptions(t))})}),$(".form-note").submit(e=>{e.preventDefault();const{id:t,eid:n}=eventId(e),s=$(`#form-note-textarea--${n}`).val();saveNote(t,s)}),$(".edit-note-item").click(e=>{e.preventDefault();const{id:t,eid:n}=eventId(e);$(`#form-note--${n}`).fadeIn()}),$(".cancel-note-form").click(e=>{e.preventDefault();const{id:t,eid:n}=eventId(e);$(`#form-note--${n}`).hide(),$(`#form-note-textarea--${n}`).val(state.papers[t].note)}),$(".memory-item-expand").click(e=>{e.preventDefault();const{id:t,eid:n}=eventId(e);$(`#memory-item-expand--${n}`).hasClass("expand-open")?($(`#memory-item-expand--${n}`).removeClass("expand-open"),$(`#extended-item--${n}`).slideUp(250)):($(`#memory-item-expand--${n}`).addClass("expand-open"),$(`#extended-item--${n}`).slideDown(250))})},openMemory=()=>{state.menuIsOpen&&closeMenu(),$("#tabler-menu").fadeOut(),$("#memory-select").val("lastOpenDate"),setMemorySortArrow("down"),$("#memory-container").slideDown({duration:300,easing:"easeOutQuint",complete:()=>{state.memoryIsOpen=!0,chrome.storage.local.get("papers",async function({papers:e}){await initState(e),$("#memory-search").attr("placeholder",`Search ${state.papersList.length} entries ...`),state.papersList.length<20?delayTime=0:state.papersList.length<50?delayTime=200:delayTime=350,$("#memory-search").keypress(delay(e=>{const t=$.trim($(e.target).val());t.startsWith("t:")?filterMemoryByTags(t):filterMemoryByString(t),displayMemoryTable()},delayTime)).keyup(e=>{8==e.keyCode&&$("#memory-search").trigger("keypress")}),displayMemoryTable(),setTimeout(()=>{$("#memory-search").focus()},400)})}}),$("#memory-switch-text-on").fadeOut(()=>{$("#memory-switch-text-off").fadeIn()}),$("#memory-select").change(e=>{const t=$(e.target).val();state.sortKey=t,sortMemory(),displayMemoryTable(),setMemorySortArrow("down")}),$("#memory-sort-arrow").click(e=>{"memory-sort-arrow-down"===$("#memory-sort-arrow svg").first()[0].id?setMemorySortArrow("up"):setMemorySortArrow("down"),reverseMemory(),displayMemoryTable()}),$(document).on("keydown",function(e){if(!state.memoryIsOpen)return;if([8,13,69,78].indexOf(e.which)<0)return;const t=$(".memory-item-container:focus").first();if(1!==t.length)return;e.preventDefault();const n=t.attr("id").split("--")[1],s=n.replace(".","\\.");13==e.which?$(`#memory-item-link--${s}`).click():8==e.which?$(`#delete-memory-item--${s}`).click():69==e.which?$(`#memory-item-tag--${s}`).click():78==e.which&&($(`#memory-item-expand--${s}`).click(),$(`#edit-note-item--${s}`).click(),$(`#form-note-textarea--${s}`).focus())})},closeMemory=()=>{$("#memory-container").slideUp({duration:300,easing:"easeOutQuint"}),$("#memory-switch-text-off").fadeOut(()=>{$("#memory-switch-text-on").fadeIn()}),$("#tabler-menu").fadeIn(),state.memoryIsOpen=!1},closeMenu=()=>{$("#menuDiv").slideUp({duration:300,easing:"easeOutQuint"})&&$("#tabler-menu").fadeOut(()=>{$("#tabler-menu").html('\n                <svg class="tabler-icon">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-adjustments" />\n                </svg>\n            '),$("#tabler-menu").fadeIn()}),state.menuIsOpen=!1},openMenu=()=>{$("#menuDiv").slideDown({duration:300,easing:"easeOutQuint"})&&$("#tabler-menu").fadeOut(()=>{$("#tabler-menu").html('\n            <svg class="tabler-icon menu-svg">\n                <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-circle-x" />\n            </svg>'),$("#tabler-menu").fadeIn()}),state.menuIsOpen=!0},main=tab=>{var feedbackTimeout=null,feedbackPrevent=!1;const feedback=()=>{try{clearTimeout(feedbackTimeout),$("#feedback-notif").remove(),feedbackPrevent=!0}catch(e){console.log("No feedback to remove.")}$("#menuDiv").append('\n            <div id="check-feedback">\n                <svg class="tabler-icon">\n                    <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-floppy-disk" />\n                </svg>\n            </div>\n        '),$("#check-feedback").animate({right:"12px",opacity:"1"},300,"easeInOutBack"),feedbackTimeout=setTimeout(()=>{$("#check-feedback").animate({right:"-100px",opacity:"0"},300,"easeInOutBack",()=>{!feedbackPrevent&&$("#check-feedback").remove(),feedbackPrevent=!1})},1500)},url=parseUrl(tab.url);$("#helpGithubLink").click(()=>{chrome.tabs.update({url:"https://github.com/vict0rsch/ArxivMemory"})}),$("#coblock").click(()=>{chrome.tabs.update({url:"https://marketplace.visualstudio.com/items?itemName=vict0rsch.coblock"})}),$(document).on("keydown",function(e){if(state.memoryIsOpen&&27===e.which&&(e.preventDefault(),closeMemory()),state.menuIsOpen&&27===e.which&&(e.preventDefault(),closeMenu()),!state.memoryIsOpen&&!state.menuIsOpen){if(13==e.which){let e=$("#memory-switch-text-on:focus").first();if(e.length>0)return void $("#memory-switch").click();if(e=$("#tabler-menu:focus").first(),e.length>0)return $("#tabler-menu").click(),void $("#tabler-menu").blur()}if(65==e.which){if($(":focus").length)return;$("#memory-switch").click()}}}),$("#tabler-menu").click(()=>{state.menuIsOpen?closeMenu():openMenu()}),$("#memory-switch").click(()=>{state.memoryIsOpen?closeMemory():openMemory()}),$("#download-arxivmemory").click(()=>{const e=(new Date).toLocaleString();chrome.storage.local.get("papers",({papers:t})=>{downloadTextFile(JSON.stringify(t),`arxiv-memory-${e}.json`,"text/json")})});const checks=["checkBib","checkMd","checkDownload","checkPdfTitle","checkVanity"];let storageKeys=[...checks,"pdfTitleFn"];chrome.storage.local.get(storageKeys,function(dataItems){const hasKey={};for(const e of checks)hasKey[e]=dataItems.hasOwnProperty(e);const setValues={};for(const e of checks)setValues[e]=!hasKey[e]||dataItems[e];chrome.storage.local.set(setValues,function(){chrome.storage.local.get(checks,function(e){for(const t of checks)$("#"+t).prop("checked",e[t]),setValues[t]=!hasKey[t]||e[t]})});for(const e of checks)$("#"+e).change(function(){const t=this.checked;chrome.storage.local.set({[e]:t},function(){feedback(),console.log(`Settings saved for ${e} (${t})`)})});if(dataItems.pdfTitleFn&&"string"==typeof dataItems.pdfTitleFn&&(state.pdfTitleFn=getPdfFn(dataItems.pdfTitleFn)),chrome.storage.local.set({pdfTitleFn:state.pdfTitleFn.toString()}),$("#customPdfTitleTextarea").val(pdfTitleFn.toString()),$("#saveCustomPdf").click(()=>{const code=$.trim($("#customPdfTitleTextarea").val());try{const fn=eval(code);fn("test","1.2"),$("#customPdfFeedback").html('<span style="color: green">Saved!</span>'),chrome.storage.local.set({pdfTitleFn:code}),state.pdfTitleFn=fn,setTimeout(()=>{$("#customPdfFeedback").html("")},1e3)}catch(e){$("#customPdfFeedback").html(`<span style="color: red">${e}</span>`)}}),$("#defaultCustomPdf").click(()=>{const e=defaultPDFTitleFn.toString();chrome.storage.local.set({pdfTitleFn:e}),state.pdfTitleFn=defaultPDFTitleFn,$("#customPdfTitleTextarea").val(e),$("#customPdfFeedback").html('<span style="color: green">Saved!</span>'),setTimeout(()=>{$("#customPdfFeedback").html("")},1e3)}),"arxiv.org"===url.hostname){$("#notArxiv").hide(),$("#notPdf").hide(),$("#isArxiv").show();const e=url.href.split("/").reverse()[0].replace(".pdf","").split("v")[0];chrome.storage.local.get("papers",async({papers:t})=>{if(!t.hasOwnProperty(e))return;await initState(t);const n=state.papers[e];$("#popup-paper-title").text(n.title),$("#popup-authors").text(n.author);const s=e.replace(".","\\."),o=getTagsHTMLOptions(e),i=n.note||"";$("#popup-memory-edit").append(`\n                <div style="width: 100%; display: flex; justify-content: space-between; align-items: center;">\n                    <div style="width: 85%">\n                        <div style="width: 100%; display: flex; justify-content: space-between; align-items: center;">\n                            <span style="margin-right: 4px">Tags:</span>\n                            <select id="popup-item-tags--${e}"class="memory-item-tags" multiple="multiple">\n                                ${o}\n                            </select>\n                        </div>\n                        <div \n                            class="form-note" \n                            id="popup-form-note--${e}" \n                            style="width: 100%; display: flex; justify-content: space-between; align-items: center; margin-top: 8px;"\n                        >\n                            <span style="margin-right: 4px">Note:</span>\n                            <textarea \n                                rows="3" \n                                style="width:85%;" \n                                id="popup-form-note-textarea--${e}"\n                            >${i}</textarea>\n                        </div>\n                    </div>\n                    <div>\n                        <button class="back-to-focus" id="popup-save-edits--${e}">Save</button>\n                    </div>\n                </div>\n                    \n                `),$("#popup-copy-icons").html(`\n                    <div\n                        class="memory-item-svg-div" \n                        id="popup-memory-item-link--${e}"\n                        title="Open Paper Arxiv Page"\n                        style="display: ${url.href.indexOf(".pdf")<0?"none":"inherit"}"\n                    >\n                        <svg  style="height: 25px; width: 25px; pointer-events: none;" >\n                        <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-external-link" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-copy-link--${e}"\n                        title="Copy pdf link" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-link" />\n                        </svg>\n                    </div>\n        \n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-md--${e}"\n                        title="Copy Markdown-formatted link" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-clipboard-list" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-bibtex--${e}"\n                        title="Copy Bibtex citation" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-archive" />\n                        </svg>\n                    </div>\n                    <div \n                        class="memory-item-svg-div"\n                        id="popup-memory-item-download--${e}"\n                        title="Download pdf" \n                    >\n                        <svg style="height: 25px; width: 25px; pointer-events: none;" >\n                            <use xlink:href="../../icons/tabler-sprite-nostroke.svg#tabler-download" />\n                        </svg>\n                    </div>\n                `),$(`#popup-item-tags--${s}`).select2({placeholder:"Tag paper...",maximumSelectionLength:5,allowClear:!0,tags:!0,width:"87%",tokenSeparators:[","," "]}),$("body").css("height","auto"),$(`#popup-form-note-textarea--${s}`).focus(function(){var e=this;setTimeout(function(){e.selectionStart=e.selectionEnd=1e4},0)}),$(`#popup-save-edits--${s}`).click(()=>{const t=$(`#popup-form-note-textarea--${s}`).val();updatePaperTags(e,`#popup-item-tags--${s}`),saveNote(e,t),$("#popup-feedback-copied").text("Saved tags & note!"),$("#popup-feedback-copied").fadeIn(),setTimeout(()=>{$("#popup-feedback-copied").text("")},1e3)}),$(`#popup-memory-item-link--${s}`).click(()=>{chrome.tabs.update({url:`https://arxiv.org/abs/${n.id}`}),window.close()}),$(`#popup-memory-item-copy-link--${s}`).click(()=>{const t=state.papers[e].pdfLink;copyAndConfirmMemoryItem(e,t,"Pdf link copied!",!0)}),$(`#popup-memory-item-md--${s}`).click(()=>{const t=state.papers[e].md;copyAndConfirmMemoryItem(e,t,"MarkDown link copied!",!0)}),$(`#popup-memory-item-bibtex--${s}`).click(()=>{const t=state.papers[e].bibtext;copyAndConfirmMemoryItem(e,t,"Bibtex citation copied!",!0)}),$(`#popup-memory-item-download--${s}`).click(()=>{let e=statePdfTitle(n.title,n.id);console.log({pdfTitle:e}),chrome.downloads.download({url:n.pdfLink,filename:e.replaceAll(":","_")})})})}})};$(()=>{chrome.tabs.query({active:!0,lastFocusedWindow:!0},function(e){e[0].url;main(e[0])})});